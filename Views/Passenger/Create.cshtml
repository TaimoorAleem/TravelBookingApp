@model TravelBookingApp.Models.Passenger

<h2>Passenger Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Flight.Id) <!-- Hidden field for FlightId -->

    <h4>Flight Details</h4>
    <p>Flight Name: @Model.Flight.FlightName</p>
    <p>Flight Code: @Model.Flight.FlightCode</p>
    <p>Departure Location: @Model.Flight.DepartureLocation</p>
    <p>Arrival Location: @Model.Flight.ArrivalLocation</p>
    <p>Departure Date and Time: @Model.Flight.DepartureDateTime.ToString("yyyy-MM-dd HH:mm:ss")</p>
    <p>Arrival Date and Time: @Model.Flight.ArrivalDateTime.ToString("yyyy-MM-dd HH:mm:ss")</p>
    <p>Flight Type: @Model.Flight.FlightType</p>
    <p>Price: @Model.Flight.Price</p>
    <!-- Add more flight details as needed -->
    <!-- Loop through passengers -->
    @for (int i = 0; i < Model.Passengers.Count; i++)
    {
        <div class="passenger">
            <h4>Passenger @(i + 1)</h4>
            <div class="form-group">
                @Html.LabelFor(model => model.Passengers[i].PassportNumber)
                @Html.EditorFor(model => model.Passengers[i].PassportNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Passengers[i].PassportNumber, "", new { @class = "text-danger" })
            </div>

            <!-- Add more input fields for Age, PassengerStatus, Seat, etc. -->
            <div class="form-group">
                @Html.LabelFor(model => model.Passengers[i].Age)
                @Html.EditorFor(model => model.Passengers[i].Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Passengers[i].Age, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Passengers[i].PassengerStatus)
                <select class="form-control" asp-for="Passengers[i].PassengerStatus" asp-items="Html.GetEnumSelectList<PassengerStatus>()"></select>
                @Html.ValidationMessageFor(model => model.Passengers[i].PassengerStatus, "", new { @class = "text-danger" })
            </div>


        </div>
    }

    <!-- Additional passengers -->
    <div id="additionalPassengers">
        <h3>Additional Passengers</h3>
        <div class="passenger">
            <!-- Duplicate the above passenger fields for additional passengers -->
        </div>
        <button type="button" id="addPassengerButton">Add Passenger</button>
    </div>

    <div class="form-group">
        <input type="submit" value="Book Flight" class="btn btn-primary" />
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var passengerIndex = @Model.Passengers.Count;

            $("#addPassengerButton").click(function () {
                var newPassenger = $("#additionalPassengers .passenger").first().clone();

                // Update input names to ensure uniqueness
                newPassenger.find("input, select").each(function () {
                    var name = $(this).attr("name").replace("[0]", "[" + passengerIndex + "]");
                    $(this).attr("name", name);
                    $(this).val(""); // Clear input values for new passenger
                });

                $("#additionalPassengers").append(newPassenger);
                passengerIndex++;
            });
        });
    </script>
}
